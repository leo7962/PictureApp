"use strict";import{app,BrowserWindow,ipcMain,dialog}from"electron";import devtools from"./devtools";import fs from"fs";import filesize from"filesize";import isImage from"is-image";import path from"path";import handleerror from"./handleerror";let win;"development"===process.env.NODE_ENV&&(devtools(),console.log("Ejecutando aplicativo")),app.on("before-quit",()=>{console.log("Saliendo del aplicativo...")}),app.on("ready",()=>{win=new BrowserWindow({width:800,height:600,title:"Bienvenido Leo",center:!0,maximizable:!1,webPreferences:{nodeIntegration:!0}}),handleerror(win),win.once("ready-to-show",()=>{win.show()}),win.on("move",()=>{const e=win.getPosition();console.log(`La posiciÃ³n es ${e}`)}),win.on("closed",()=>{win=null,app.quit()}),win.loadURL(`file://${__dirname}/renderer/index.html`)}),ipcMain.on("open-directory",(e,o)=>{console.log("arguments"+o),dialog.showOpenDialog(win,{title:"Select the new location",buttonLabel:"Open location",properties:["openDirectory"]}).then(o=>{if(o.canceled)return;const i=o.filePaths[0];fs.readdir(i,(o,n)=>{let t=[];if(o)console.log(o);else{for(let e=0;e<n.length;e++)if(isImage(n[e])){let o=path.join(i,n[e]),s=fs.statSync(o),l=filesize(s.size,{round:0});t.push({fileName:n[e],src:`file://${o}`,size:l})}e.sender.send("load-images",t),console.log(t)}})}).catch(e=>{console.log(e)})}),ipcMain.on("open-save-dialog",(e,o)=>{dialog.showSaveDialog(win,{title:"Save image edited",buttonLabel:"Save image",filters:[{name:"Images",extensions:[o.substr(1)]}]}).then(o=>{o&&e.sender.send("save-image",o)})}),ipcMain.on("show-dialog",(e,o)=>{dialog.showMessageBox(win,{type:o.type,title:o.title,message:o.message})});